---
- name: Include OS-specific variables.
  include_vars: "{{ ansible_os_family }}.yml"

- name: Check if GitLab configuration file already exists.
  stat: path=/etc/gitlab/gitlab.rb
  register: gitlab_config_file

- name: Check if GitLab is already installed.
  stat: path=/usr/bin/gitlab-ctl
  register: gitlab_file

# Install GitLab and its dependencies (RedHat).
- name: Install GitLab dependencies (RedHat).
  yum: "name={{ item }} state=installed"
  with_items:
    - openssh-server
    - postfix
    - curl
  when: ansible_os_family == 'RedHat'

- name: Download GitLab repository installation script (RedHat).
  get_url:
    url: "{{ gitlab_repository_installation_script_url }}"
    dest: /tmp/gitlab_install_repository.sh
  when: (gitlab_file.stat.exists == false) and (ansible_os_family == 'RedHat')

- name: Install GitLab repository (RedHat)
  command: bash /tmp/gitlab_install_repository.sh
  when: (gitlab_file.stat.exists == false) and (ansible_os_family == 'RedHat')

- name: Install GitLab (RedHat)
  yum: "name=gitlab-ce state=installed"
  when: (gitlab_file.stat.exists == false) and (ansible_os_family == 'RedHat')

# Install GitLab and its dependencies (Debian).
- name: Install GitLab dependencies (Debian).
  apt: "name={{ item }} state=installed"
  with_items:
    - openssh-server
    - postfix
    - curl
  when: ansible_os_family == 'Debian'

- name: Download GitLab repository installation script (Debian).
  get_url:
    url: "{{ gitlab_repository_installation_script_url }}"
    dest: /tmp/gitlab_install_repository.sh
  when: (gitlab_file.stat.exists == false) and (ansible_os_family == 'Debian')

- name: Install GitLab repository
  command: bash /tmp/gitlab_install_repository.sh
  when: (gitlab_file.stat.exists == false) and (ansible_os_family == 'Debian')

- name: Install GitLab
  apt: "name=gitlab-ce state=installed"
  when: (gitlab_file.stat.exists == false) and (ansible_os_family == 'Debian')

# Start and configure GitLab. Sometimes the first run fails, but after that,
# restarts fix problems, so ignore failures on this run.
- name: Reconfigure GitLab (first run).
  command: >
    gitlab-ctl reconfigure
    creates=/var/opt/gitlab/bootstrapped
  failed_when: false

- name: Create GitLab SSL configuration folder.
  file:
    path: /etc/gitlab/ssl
    state: directory
    owner: root
    group: root
    mode: 0700
  when: gitlab_create_self_signed_cert

- name: Create self-signed certificate.
  command: >
    openssl req -new -nodes -x509 -subj "{{ gitlab_self_signed_cert_subj }}" -days 3650 -keyout {{ gitlab_ssl_certificate_key }} -out {{ gitlab_ssl_certificate }} -extensions v3_ca
    creates={{ gitlab_ssl_certificate }}
  when: gitlab_create_self_signed_cert

- name: Enable OmniAuth (to sync repos from Github)
  lineinfile: "dest=/var/opt/gitlab/gitlab-rails/etc/gitlab.yml regexp='^omniauth:\n    # Allow login via Twitter, Google, etc. using OmniAuth providers\n    enabled: false' line='omniauth:\n    # Allow login via Twitter, Google, etc. using OmniAuth providers\n    enabled: true' state=present"
  when: (ansible_os_family == 'RedHat') and (ansible_product_version == 'RHEL 7.0.0 PC (i440FX + PIIX, 1996)')

- name: Disable allow_single_sign_on in gitlab.yml
  lineinfile: "dest=/var/opt/gitlab/gitlab-rails/etc/gitlab.yml regexp='^allow_single_sign_on:' line='allow_single_sign_on: false' state=present"
  when: (ansible_os_family == 'RedHat') and (ansible_product_version == 'RHEL 7.0.0 PC (i440FX + PIIX, 1996)')

- name: Change block_auto_created_users in gitlab.yml
  lineinfile: "dest=/var/opt/gitlab/gitlab-rails/etc/gitlab.yml regexp='^block_auto_created_users:' line='block_auto_created_users: true' state=present"
  when: (ansible_os_family == 'RedHat') and (ansible_product_version == 'RHEL 7.0.0 PC (i440FX + PIIX, 1996)')

- name: Change auto_link_ldap_user in gitlab.yml
  lineinfile: "dest=/var/opt/gitlab/gitlab-rails/etc/gitlab.yml regexp='^auto_link_ldap_user:' line='auto_link_ldap_user: false' state=present"
  when: (ansible_os_family == 'RedHat') and (ansible_product_version == 'RHEL 7.0.0 PC (i440FX + PIIX, 1996)')

- name: Copy GitLab configuration file.
  template:
    src: gitlab.rb.j2
    dest: /etc/gitlab/gitlab.rb
    owner: root
    group: root
    mode: 0600
  notify: restart gitlab

- name: Configure firewalld (CentOS/RHEL 7)
  shell: firewall-cmd --permanent --add-port=443/tcp && firewall-cmd --permanent --add-port=80/tcp
  when: (ansible_os_family == 'RedHat') and (ansible_product_version == 'RHEL 7.0.0 PC (i440FX + PIIX, 1996)')

- name: Restart firewalld (CentOS/RHEL 7)
  service: name=firewalld.service state=restarted
  when: (ansible_os_family == 'RedHat') and (ansible_product_version == 'RHEL 7.0.0 PC (i440FX + PIIX, 1996)')
